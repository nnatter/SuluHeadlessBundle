name: PHP

on:
    pull_request:
    push:
        branches:
            - master

env:
    DATABASE_URL: mysql://root@127.0.0.1:33306/su_headless_test?serverVersion=5.7

jobs:

    tests:
        name: Test Application
        runs-on: ubuntu-latest

        services:
            mysql:
                image: mysql:5.7
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: true
                ports:
                    - 33306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

        steps:
            - name: Checkout project
              uses: actions/checkout@v1

            - name: Install and configure PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '7.4'
                  coverage: pcov

            - name: Validate composer.json and composer.lock
              run: composer validate

            - name: Get Composer Cache Directory
              id: composer-cache
              run: |
                echo "::set-output name=dir::$(composer config cache-files-dir)"

            - uses: actions/cache@v1
              with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                restore-keys: |
                  ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer install --prefer-dist --no-progress --no-suggest

            - name: Run unit tests
              run: composer phpunit -- Tests/Unit --coverage-php var/coverage.php --coverage-html coverage-report --log-junit var/junit.xml

            - name: Check code coverage
              run: php vendor/bin/code-coverage-checker "var/coverage.php" "line" "95" "Content"

            - name: Prepare functional testcases
              run: composer bootstrap-test-environment

            - name: Linting code
              run: composer lint

            - name: Run functional tests
              run: composer phpunit -- Tests/Functional --log-junit var/junit.xml

    php-cs-fixer:
        name: Run php-cs-fixer
        runs-on: ubuntu-18.04

        steps:
            - name: Checkout project
              uses: actions/checkout@v1

            - name: Install and configure PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '7.4'

            - name: Create downloads directory
              run: mkdir downloads

            - name: Get downloads path
              id: php-cs-fixer-dir
              run: echo "::set-output name=dir::downloads"

            - name: Get php-cs-fixer path
              id: php-cs-fixer-path
              run: echo "::set-output name=path::${{ steps.php-cs-fixer-dir.outputs.dir }}/php-cs-fixer.phar"

            - name: Cache php-cs-fixer
              id: php-cs-fixer-cache
              uses: actions/cache@v1
              with:
                  path: ${{ steps.php-cs-fixer-dir.outputs.dir }}
                  key: php-cs-fixer

            - name: Download php-cs-fixer
              if: steps.php-cs-fixer-cache.outputs.cache-hit != 'true'
              run: curl "https://cs.symfony.com/download/php-cs-fixer-v2.phar" --output ${{ steps.php-cs-fixer-path.outputs.path }} && chmod +x ${{ steps.php-cs-fixer-path.outputs.path }}

            - name: Run php-cs-fixer
              run: ./${{ steps.php-cs-fixer-path.outputs.path }} fix --dry-run --diff
